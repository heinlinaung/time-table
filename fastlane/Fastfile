# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  # Fetch the keychain env variables(securely stored in the azure pipeline yml)
  # keychain_name = ENV["MATCH_KEYCHAIN_NAME"]
  # keychain_password = ENV["MATCH_KEYCHAIN_PASSWORD"]

  keychain_name = "apk_ggwp"
  keychain_password = "ggwp"

  before_all do
    unlock_keychain(path: '~/Library/Keychains/login.keychain',password: "A1DC2A63B3D14817A64619FDDBC92264")
    clear_derived_data
    create_keychain(
      name: keychain_name,
      password: keychain_password,
      unlock: true,
      timeout: false,
      default_keychain: true,
      add_to_search_list: true
    )
  end

  lane :beta do
    increment_build_number(xcodeproj: "TimeTable.xcodeproj")
    increment_version_number

    build_number = get_build_number
    version_number = get_version_number
    changelog = read_changelog(changelog_path: './CHANGELOG.md')
    # changelog_path: './release_CHANGELOG.md' # for "Release" lane

    match(
      type: "appstore",
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      readonly: true,
      verbose: true
    )

    gym(
    	scheme: "TimeTable",
    	configuration: "Release",
    	clean: false,
        sdk: "iphoneos",
        verbose: true
    )

    # pilot
    stamp_changelog(section_identifier: "Version #{version_number}, Build #{build_number}") # Stamp Unreleased section with newly released build number
    # commit to git the changes from bumping version number
    commit_version_bump(message: "Committed version bump [***NO_CI***]",
                        include: "CHANGELOG.md")
    push_to_git_remote(
      # local_branch: "master",
      remote_branch: "master"
    )
    delete_keychain(name: keychain_name)
  end


  desc "Run unit and ui tests"
  lane :runTests do
    run_tests(
      scheme: "TimeTable",
      #code_coverage: true 
    )
  end

end
