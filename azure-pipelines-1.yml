# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
- master

pool:
  # vmImage: 'macos-latest'
  vmImage: 'macOS-10.13'

steps:

- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: 'bitbucket.org,131.103.20.168 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw=='
    sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCqalxjeXSwhWQizVjH89eC8YsVmrCgrp9Zu3y5nQa9taNDEOh1WyklzsMoI2rdiFDtPu6NchqOalfMfQdeyKhxeNf82S88IVws7DpcDV9o1n+E585id1DYy/T7gSHsQ5Sri6LDKvkY13U6xpml/MSzpkghwasCy1suHsSFX7zYr5y6/FnSJiIh8BJRKxoR6onioDZphU3rEwqA52v+3B29I6NNao1J+LQfAebCNs67tjClMMcMEF8CQAbbNx68U4OrcRtlEloJFBNWCAckmiW6DGzMK9NLGsuF1KhHQy0ZkxG2vCwDvKukPfS3hC544+wAFyfKHBFxSeQx0+unouDC8hpCb9HSf/2yFcF5gd6YHOtVnzyiw3P8iM4t0ZwmA0FyJlRCdRcK01WQrO7q3ceAPW5XILiQ4Dg9mbPznrgDTgOfThIPJcpudACC4qtbQdcBB53KJ/4PjX+fHuZukzCvLBusBIzjKH/bI6PvJeVwUCVXsOKIwlbNUJCwckG+T10p5AO5ayVaBE2Cg5hVw8jlD+YqYlW8DcBC7tOFPwG3jDsKz3Kw/bxoes/yL9zstyTqCtO/Aul2J8o6B6cWNz4YWQsw60JEHF68yJySSU+RdLCFZS15VGBgybiwhSkfJKQktPpRqYsCPnAJOFghJxVOTwddXWO5xx+dOa6ASBGaNw== heinlinaung@amdon.com'
    # sshPassphrase: '$(sshPass)'
    sshKeySecureFile: 'id_rsa'

# - task: InstallAppleCertificate@2
#   displayName: 'Install Apple Cert'
#   inputs:
#     certSecureFile: 'Certificates(GG).p12'
#     certPwd: '$(P12password)'
#     keychain: 'temp'

- task: CmdLine@2
  displayName: '[SETUP] git config username'
  inputs:
    script: 'git config --global url."git@github.com:".insteadOf "https://github.com/"'

# - task: CmdLine@2
#   displayName: '[SETUP] git config username'
#   inputs:
#     script: 'git config --global user.email "heinlinaung@amdon.com"'

# - task: CmdLine@2
#   displayName: '[SETUP] git config username'
#   inputs:
#     script: 'git config --global user.name "Hein Lin Aung"'
    
# - task: InstallAppleCertificate@2
#   inputs:
#     certSecureFile: 'iPhDev(9V-lwin).p12'
#     certPwd: '$(P12password)'
#     keychain: 'temp'
# - task: InstallAppleProvisioningProfile@1
#   displayName: 'Install Apple Provisioning Profile'
#   inputs:
#     provisioningProfileLocation: 'secureFiles'
#     provProfileSecureFile: 'SampleJenkinsApp_AppStore.mobileprovision'
#     removeProfile: false

# - task: CmdLine@2
#   inputs:
#     script: 'ls /Users/vsts/agent/2.155.1/work/1/s/TimeTable.xcodeproj/'
- task: CmdLine@2
  displayName: 'Install fastlane plugin - changelog'
  inputs:
    script: 'gem install bundler'
- task: CmdLine@2
  displayName: 'Install fastlane plugin - changelog'
  inputs:
    script: 'bundle install'

- task: CmdLine@2
  displayName: 'Install fastlane plugin - changelog'
  inputs:
    script: 'bundle exec fastlane install_plugins'
# - task: CmdLine@2
#   displayName: 'Install fastlane plugin - changelog'
#   inputs:
#     script: 'bundle exec fastlane upgrade_plugins'
- task: CmdLine@2
  displayName: 'Check OS version'
  inputs:
    script: 'sw_vers'

- task: CmdLine@2
  displayName: 'ShowSDKs'
  inputs:
    script: '/usr/bin/xcodebuild -showsdks'

- task: CmdLine@2
  displayName: 'Xcode version'
  inputs:
    script: '/usr/bin/xcodebuild -version'

- task: CmdLine@2
  displayName: '[RUN] fastlane beta with verbose'
  inputs:
    script: 'bundle exec fastlane beta  --verbose'
  env:
      FASTLANE_PASSWORD: '$(appleIDPwd)'
      MATCH_PASSWORD: '$(matchPwd)'
      MATCH_KEYCHAIN_PASSWORD: 'ggwp'
      MATCH_KEYCHAIN_NAME: 'apk_ggwp'

# - task: CmdLine@2
#   displayName: 'MANUAL BUILD'
#   condition: always()
#   continueOnError: true
#   inputs:
#     script: 'set -o pipefail && xcodebuild -scheme TimeTable -project "/Users/vsts/agent/2.155.1/work/1/s/TimeTable.xcodeproj" -configuration Release -sdk "iphoneos" -destination "generic/platform=iOS" -archivePath /Users/vsts/Library/Developer/Xcode/Archives/2019-09-27/TimeTable\ 2019-09-27\ 03.57.31.xcarchive archive | xcpretty'
    
- task: CmdLine@2
  displayName: 'LOG'
  condition: always()
  continueOnError: true
  inputs:
    script: 'cat /Users/vsts/Library/Logs/gym/TimeTable-Timetable.log'

- task: CmdLine@2
  displayName: 'Check README.md'
  condition: always()
  continueOnError: true
  inputs:
    script: 'cat /Users/vsts/agent/2.155.1/work/1/s/fastlane/README.md'

- task: CmdLine@2
  displayName: 'Check installed Certs'
  condition: always()
  continueOnError: true
  inputs:
    script: 'security find-identity -v -p codesigning apk_ggwp'
    
- task: CmdLine@2
  displayName: 'Check Fastlane ENV'
  condition: always()
  continueOnError: true
  inputs:
    script: 'fastlane env'

    
# - task: Xcode@5
#   inputs:
#     actions: 'build'
#     scheme: 'TimeTable'
#     xcodeVersion: '9'
#     packageApp: false
#     signingOption: 'manual'
#     signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
#     provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
#     provisioningProfileName: 'SampleJenkinsApp_AppStore.mobileprovision'
#     destinationPlatformOption: 'iOS'
#     destinationSimulators: 'iPhone 6'

# - task: Xcode@5  
#   inputs:
#     actions: 'build'
#     sdk : ''
#     configuration: '$(Configuration)'
#     scheme: 'TimeTable'
#     xcodeVersion: '10'
#     packageApp: false
#     signingOption: 'manual'
#     signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
#     provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
#     provisioningProfileName: 'SampleJenkinsApp_AppStore.mobileprovision'
#     destinationPlatformOption: 'iOS'
#     destinationSimulators: 'iPhone 6'
# - task: AppStoreRelease@1
#   inputs:
#     serviceEndpoint: 'AppStoreConnect'
#     appIdentifier: 'com.werkztechnologies.sampleenkinsapp'
#     appType: 'iOS'
#     ipaPath: '**/*.ipa'
#     releaseTrack: 'TestFlight'